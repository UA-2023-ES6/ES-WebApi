// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneCampus.Infrastructure.Data;

#nullable disable

namespace OneCampus.Infrastructure.Migrations
{
    [DbContext(typeof(OneCampusDbContext))]
    partial class OneCampusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.Property<int>("GroupsId")
                        .HasColumnType("int");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("char(36)");

                    b.HasKey("GroupsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("GroupUser");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("UserId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("GroupId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("GroupId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.UserRoleInstitution", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId", "InstitutionId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoleInstitution");
                });

            modelBuilder.Entity("GroupUser", b =>
                {
                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Class", b =>
                {
                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Institution", "Institution")
                        .WithMany("Classes")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.User", null)
                        .WithMany("Classes")
                        .HasForeignKey("UserId");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Event", b =>
                {
                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Class", "Class")
                        .WithMany("Events")
                        .HasForeignKey("ClassId");

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Group", "Group")
                        .WithMany("Events")
                        .HasForeignKey("GroupId");

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Institution", "Institution")
                        .WithMany("Events")
                        .HasForeignKey("InstitutionId");

                    b.Navigation("Class");

                    b.Navigation("Group");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Group", b =>
                {
                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Class", "Class")
                        .WithMany("Groups")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Message", b =>
                {
                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Class", "Class")
                        .WithMany("Messages")
                        .HasForeignKey("ClassId");

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Institution", "Institution")
                        .WithMany("Messages")
                        .HasForeignKey("InstitutionId");

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Group");

                    b.Navigation("Institution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.UserRoleInstitution", b =>
                {
                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Institution", "Institution")
                        .WithMany("UserRoleInstitution")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.Role", "Role")
                        .WithMany("UserRoleInstitution")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneCampus.Infrastructure.Data.Entities.User", "User")
                        .WithMany("UserRoleInstitution")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Class", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Groups");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Group", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Institution", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Events");

                    b.Navigation("Messages");

                    b.Navigation("UserRoleInstitution");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.Role", b =>
                {
                    b.Navigation("UserRoleInstitution");
                });

            modelBuilder.Entity("OneCampus.Infrastructure.Data.Entities.User", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("UserRoleInstitution");
                });
#pragma warning restore 612, 618
        }
    }
}
